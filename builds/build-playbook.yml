---
- name: Playbook for building 0x01 Zcashd Containerfiles
  hosts: localhost
  tasks:
    - name: Load build arguments
      include_vars: "{{ playbook_dir }}/build-args.yml"
    - name: Ensure existence of build directories
      file:
        path: "{{ playbook_dir }}/artifacts/{{ item.name }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      with_items: "{{ build_matrix }}"
    - name: Render Containerfiles (to be built) based on build-args
      template:
        src: "{{ playbook_dir }}/templates/Containerfile.j2"
        dest: "{{ playbook_dir }}/artifacts/{{ item.name }}/Containerfile"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644
      vars:
        os_version: "{{ item.os_version | default(default_os_version) }}"
        git_url: "{{ item.git_url | default(default_git_url) }}"
        git_version: "{{ item.git_version | default(default_git_version) }}"
        system_dependencies: "{{ item.system_dependencies }}"
        package_manager: "{{ item.package_manager | default(default_package_manager) }}"
      with_items: "{{ build_matrix }}"
    - name: Build each OS based image from parent DIR of playbook
      become: true
      when: build_images
      command:
        chdir: "{{ playbook_dir.split('/')[0:-1]|join('/') }}"
        cmd: "docker build --file {{ playbook_dir }}/artifacts/{{ item.name }}/Containerfile --tag staged-zcashd:{{ item.git_version | default(default_git_version) }}_{{ item.name }} ."
      with_items: "{{ build_matrix }}"
    - name: Re-tag images for public release/push
      when: push_images
      command:
        chdir: "{{ playbook_dir.split('/')[0:-1]|join('/') }}"
        cmd: "docker tag staged-zcashd:{{ item.git_version | default(default_git_version) }}_{{ item.name }} 0labs/0x01.zcashd:{{ item.git_version | default(default_git_version) }}_{{ item.name }}"
      with_items: "{{ build_matrix }}"
    - name: Push each OS based image to the public Dockerhub repository
      when: push_images
      command:
        chdir: "{{ playbook_dir.split('/')[0:-1]|join('/') }}"
        cmd: "docker push 0labs/0x01.zcashd:{{ item.git_version | default(default_git_version) }}_{{ item.name }}"
      with_items: "{{ build_matrix }}"
